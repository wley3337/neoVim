# setup config
#auto setup
#source-file ~/.tmux.conf
#new-session -s dev -n ide
#split-window -v -p 10 -t dev
#select-pane -t 1
#split-window -h - p 30 -t dev
#new-window -n shell
#select-window -t dev:1
#select-pane -t 1


#switch panes using Alt + hjkl
#bind -n M-h select-pane -L
#bind -n M-l select-pane -R
#bind -n M-k select-pane -U
#bind -n M-j select-pane -D

#split horizontal
#unbind %
#bind | split-window -h
#split verticle
#unbind "
#bind - split-window -v
#colors
#foregroud
#set -g status-fg blue
#background
#set -g status-bg black

#set -g default-command "reattach-to-user-namespace -l zsh"
# tmux display things in 256 colors
#set -g default-terminal "screen-256color"

# automatically renumber tmux windows
#set -g renumber-windows on

# unbind default prefix and set it to Ctrl+a
#unbind C-b
#set  prefix C-a
#bind-key C-a send-prefix

# for nested tmux sessions
#bind-key a send-prefix

# Activity Monitoring
#setw -g monitor-activity off
#set -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
#setw -g aggressive-resize on

# make delay shorter
#set -sg escape-time 0

# make window/pane index start with 1
#set -g base-index 1
#setw -g pane-base-index 1

######################
#### Key Bindings ####
######################

# reload config file
# This is circular reference
# bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# split window and fix path for tmux 1.9
#bind | split-window -h -c "#{pane_current_path}"
#bind - split-window -v -c "#{pane_current_path}"

# synchronize all panes in a window
#bind y setw synchronize-panes

# pane movement shortcuts
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
#
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

# Resize pane shortcuts
#bind -r H resize-pane -L 10
#bind -r J resize-pane -D 10
#bind -r K resize-pane -U 10
#bind -r L resize-pane -R 10

# enable mouse support for switching panes/windows
# NOTE: This breaks selecting/copying text on OSX
# To select text as expected, hold Option to disable it (iTerm2)
#set-window-option -g mouse on

# set vi mode for copy mode
#set-window-option -g mode-keys vi

# more settings to make copy-mode more vim-like
#unbind [
#bind Escape copy-mode
#unbind p
#bind p paste-buffer
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection

# Buffers to/from Mac clipboard, yay tmux book from pragprog
#bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
#bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

# adding the -r flag makes the command repeateable
# Set prefix to control a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# quick reload of config file
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# set base index to start at 1 for windows
setw -g pane-base-index 1

# setting the delay between prefix and command
set -s escape-time 1

# split window and fix path for tmux 1.9
bind-key - split-window -h -c "#{pane_current_path}"
bind-key | split-window -v -c "#{pane_current_path}"

# vim-like pane switching
bind  k select-pane -U
bind  j select-pane -D
bind  h select-pane -L
bind  l select-pane -R
#bind  T split-window -b -p 35 -h -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/dotfiles/todo.md"

# Quick window selection
bind -r C-h select-window -t:-
bind -r C-l select-window -t:+

# Vim movement to resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Sets the mouse as an input device for resizing/selecting windows
set -g mouse on

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'


# Tmux status line
# set the status line's colors
# supports dim, bright or bold, reverse, blink
set -g status-style fg=colour153,bg=colour18

# set the color of the window list
setw -g window-status-style fg=cyan,bg=black

# set colors for the active window
#setw -g window-status-current-style fg=white,bold,bg=red

# colors for pane boards
setw -g pane-border-style fg=cyan,bg=black
setw -g pane-active-border-style fg=green,bg=black
